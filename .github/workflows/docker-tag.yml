name: Update RS docker image tags

on:
  registry_package:
    types: [published]
permissions:
  packages: read

jobs:

  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
      with:
       repository: datakaveri/iudx-deployment
       token: "${{ secrets.JENKINS_UPDATE }}"
       fetch-depth: 0
    - name: Update RS docker image tags
      env: 
        GH_TOKEN: ${{ secrets.JENKINS_UPDATE}}
      run: | 
        export newtag4_5_0=`(head -n 1 <(curl -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/orgs/datakaveri/packages/container/rs-depl/versions | jq ' .[].metadata.container.tags[0]'  | grep 4.5.0 | sed -e 's/^"//' -e 's/"$//'))`
        export newtag5_0_0=`(head -n 1 <(curl -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/orgs/datakaveri/packages/container/rs-depl/versions | jq ' .[].metadata.container.tags[0]'  | grep 5.0.0-alpha | sed -e 's/^"//' -e 's/"$//'))`
        export oldtag5_0_0=`yq -r .services.rs.image Docker-Swarm-deployment/single-node/resource-server/rs-stack.yaml | cut -d : -f 2`
        git checkout 4.5.0
        export oldtag4_5_0=$(yq -r .services.rs.image Docker-Swarm-deployment/single-node/resource-server/rs-stack.yaml | cut -d : -f 2)      
        git config --global user.name 'tharakiudx'
        git config --global user.email "tharakramdasari@gmail.com"



        if [ "$newtag4_5_0" != "$oldtag4_5_0" ]
        then
         git checkout -b rs-4.5.0-automatic-updates/$newtag4_5_0
         sed -i s/$oldtag4_5_0/$newtag4_5_0/g Docker-Swarm-deployment/single-node/resource-server/rs-stack.yaml
         export oldappversion=`yq -r .version K8s-deployment/Charts/resource-server/Chart.yaml`
         export newappversion=`yq -r .version K8s-deployment/Charts/resource-server/Chart.yaml | awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{if(length($NF+1)>length($NF))$(NF-1)++; $NF=sprintf("%0*d", length($NF), ($NF+1)%(10^length($NF))); print}' `
         sed -i s/$oldappversion/$newappversion/g K8s-deployment/Charts/resource-server/Chart.yaml
         sed -i s/$oldtag4_5_0/$newtag4_5_0/g K8s-deployment/Charts/resource-server/values.yaml
         git add Docker-Swarm-deployment/single-node/resource-server/rs-stack.yaml K8s-deployment/Charts/resource-server/values.yaml K8s-deployment/Charts/resource-server/Chart.yaml
         git commit --allow-empty -m "updated rs docker image tag to $newtag4_5_0"
         git push --set-upstream origin rs-4.5.0-automatic-updates/$newtag4_5_0
         gh pr create -R datakaveri/iudx-deployment --base 4.5.0 --fill 
        fi
        
        if [ "$newtag5_0_0" != "$oldtag5_0_0" ]
        then
         git checkout master
         git checkout -b rs-automatic-updates/$newtag5_0_0
         sed -i s/$oldtag5_0_0/$newtag5_0_0/g Docker-Swarm-deployment/single-node/resource-server/rs-stack.yaml
         export oldappversion=`yq -r .version K8s-deployment/Charts/resource-server/Chart.yaml`
         export newappversion=`yq -r .version K8s-deployment/Charts/resource-server/Chart.yaml | awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{if(length($NF+1)>length($NF))$(NF-1)++; $NF=sprintf("%0*d", length($NF), ($NF+1)%(10^length($NF))); print}' `
         sed -i s/$oldappversion/$newappversion/g K8s-deployment/Charts/resource-server/Chart.yaml
         sed -i s/$oldtag5_0_0/$newtag5_0_0/g K8s-deployment/Charts/resource-server/values.yaml
         git add Docker-Swarm-deployment/single-node/resource-server/rs-stack.yaml K8s-deployment/Charts/resource-server/values.yaml K8s-deployment/Charts/resource-server/Chart.yaml
         git commit --allow-empty -m "updated rs docker image tag to $newtag5_0_0"
         git push --set-upstream origin rs-automatic-updates/$newtag5_0_0
         gh pr create -R datakaveri/iudx-deployment --base master --fill 
        fi


